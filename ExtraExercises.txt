1.- Escribe una función que reciba como parámetro un arreglo de números y 
regrese un nuevo arreglo con cada uno de los elementos multiplicados por dos. 

Ejemplo: 
    const array =  [1,2,3,4,5]; 
    const a = mult2(array); 
    // a = [2,4,6,8,10] 

2.- Escribe una función que reciba como parámetro un arreglo de números sume todos
y regrese si la suma de los elementos es un número par.

Ejemplo:
    const array = [1,2,3,4,5];
    const array1 = [1,2,3,4];
    const a = sumaPar(array); // sum = 15 <- No es par
    const b = sumaPar(array1); // sum = 10 <- Es par
    // a = false, b = true

3.- Escribe un función que reciba como parámetro un arreglo de números y un número A. 
Debe regresar las veces que se encuentra el número A en el arreglo.

Ejemplo:
    const array = [1,2,3,4,5,5,5];
    const a = count(array, 5);
    const b = count(array, 3);
    // a = 3, b = 1

4.- Escribe una función que reciba como parámetro un arreglo de números y un número A.
Debe regresar el primer indice del arreglo donde se encuentre el número A. Sino se encuetra el
número A en el arreglo debe regresar -1;

Ejemplo:
    const array = [1,2,3,3,4,5];
    const a = findIndex(array, 3);
    const b = findIndex(array, 5);
    // a = 2, b = 5

5.- Escribe una función que reciba como parámetro un arreglo de número y un número A.
La función debe regresar un nuevo arreglo con todos los elementos del arreglo original
pero eliminando todos los elementos que sean igual al número A.

Ejemplo:
    const array = [1,2,1,3,4,5,6,1];
    const a = filter(array, 1);
    const b = filter(array, 2);
    // a = [2,3,4,5,6], b = [1,1,3,4,5,6,1]

6.- Escribe una función que reciba como parámetro un arreglo de números y un número A.
La función debe regresar un 'boolean' true si el número A está en el arreglo y false si no está
en el arreglo.

Ejemplo:
    const array = [1,2,3,4,5];
    const a = isThere(array, 1);
    const b = isThere(array, 6);
    // a = true, b = false

7.- Escribe una función que reciba como parámetro un arreglo de números.
La función debe regresar 'true' si todos los números del arreglo son iguales y false
si uno solo es diferente.

Ejemplo:
    const array = [1,1,1,1,1];
    const array1 = [1,1,1,1,3];
    const a = isSame(array);
    const b = isSame(array1);
    // a = true, b = false

8.- Escribe una función que reciba como parámetro un arreglo de números y regrese un
nuevo arreglo con unicamente los números pares.

Ejemplo:
    const array = [2,3,4,5,6];
    const array1 = [10,22,33,10];
    const a = even(array);
    const b = even(array1);
    // a = [2,4,6], b = [10,22,10]

9.- Escribe una función que reciba como parámetro un arreglo de números y regrese un
nuevo arreglo con unicamente los números impares.

Ejemplo:
    const array = [2,3,4,5,6];
    const array1 = [10,22,33,10];
    const a = odd(array);
    const b = odd(array1);
    // a = [3,5], b = [33]

10.- Escribe una función que reciba como parámetro un arreglo de números y regrese un
nuevo arreglo con todos los elementos del arreglo original excepto el primero y el ultimo.

Ejemplo:
    const array = [2,3,4,5,6];
    const array1 = [10,22,33,10];
    const a = cut(array);
    const b = cut(array1);
    // a = [3,4,5], b = [22,33]

